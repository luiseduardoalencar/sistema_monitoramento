// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar uma migration: npx prisma migrate dev

model User_admin {
  id_admin String @id @default(uuid())
  nome_admin String 
  nome_orgao String
  cargo String
  profissao String
  nivel_escolaridade String
  sexo String
  genero String
  cpf_admin String 
  mat_orgao String
  unidade_sei String
  email_institucional String
  email_pessoal String
  nome_empresa String
  num_contrato String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  @@map("user_admin")
  
}

model User_fiscal {
  id_fiscal String @id @default(uuid())
  nome_fiscal String @unique 
  nome_orgao String
  cargo String
  profissao String
  nivel_escolaridade String
  sexo String
  genero String
  cpf_fiscal String @unique
  mat_orgao String
  unidade_sei String
  email_institucional String
  email_pessoal String
  cnpj_fiscal String @unique
  nome_empresa String
  num_contrato String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  
  fiscal_nome Projetos[] @relation("ag_fiscal_nome")
  fiscal_cpf Projetos[] @relation("ag_fiscal_cpf")
  fiscal_cnpj Projetos[] @relation("ag_fiscal_cnpj")

  @@map("user_fiscal")
  
  
}

model User_alimentador {
  id_alimentador String @id @default(uuid())
  nome_alimentador String @unique
  nome_orgao String
  cargo String
  profissao String
  nivel_escolaridade String
  sexo String
  genero String
  cpf_alimentador String @unique
  mat_orgao String
  unidade_sei String
  email_institucional String
  email_pessoal String
  cnpj_alimentador String @unique
  nome_empresa String
  num_contrato String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  
  alimentador_nome Projetos[] @relation("ag_alimentador_nome")
  alimentador_cpf Projetos[] @relation("ag_alimentador_cpf")
  alimentador_cnpj Projetos[] @relation("ag_alimentador_cnpj")

  @@map("user_alimentador")
  
  
}


model Codigo_Unico { 
  id_codigo_unico Int @id @default(autoincrement())
  cod_unico String  @unique
  cod_municipio String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
 
  projetos Projetos[] @relation("cod_unico")
  @@map("codigo_unico")
}

model Projetos {
  id_projeto String @id @default(uuid())
  nome_projeto String 
  data_inicio String
  prazo_exec String
  cod_unico String
  cod_cnae_secao String
  cod_cnae_divisao String
  nome_alimentador String
  cpf_alimentador String 
  cnpj_alimentador String
  nome_fiscal String
  cpf_fiscal String
  cnpj_fiscal String
  exec_projeto String
  justificativa String
  canal_comunicacao String
  orcamento String
  previsao_de_custo String
  acoes String
  atividades String
  subatividades String
  tarefas String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())


  agenteFiscalnome User_fiscal @relation("ag_fiscal_nome", fields: [nome_fiscal], references: [nome_fiscal])
  agenteFiscalByCPF User_fiscal @relation("ag_fiscal_cpf", fields: [cpf_fiscal], references: [cpf_fiscal])
  agenteFiscalByCNPJ User_fiscal @relation("ag_fiscal_cnpj", fields: [cnpj_fiscal], references: [cnpj_fiscal])
  agenteAlimentador User_alimentador @relation("ag_alimentador_nome", fields: [nome_alimentador], references: [nome_alimentador])
  agenteAlimentadorByCPF User_alimentador @relation("ag_alimentador_cpf", fields: [cpf_alimentador], references: [cpf_alimentador])
  agenteAlimentadorByCNPJ User_alimentador @relation("ag_alimentador_cnpj", fields: [cnpj_alimentador], references: [cnpj_alimentador])
  codigoUnico Codigo_Unico @relation("cod_unico", fields: [cod_unico], references: [cod_unico])

  @@map("projetos")

  
}

